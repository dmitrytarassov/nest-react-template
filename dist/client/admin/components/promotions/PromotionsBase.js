"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_admin_1 = require("react-admin");
const validate_1 = require("../utils/validate");
const Box_1 = require("@admin/components/Box");
const BoundedTextField_1 = require("../BoundedTextField");
const makeUrl_1 = require("../utils/makeUrl");
const PreviewImage_1 = require("../previews/PreviewImage");
const PromotionsBase = () => {
    const [name, setName] = (0, react_1.useState)('');
    return ((0, jsx_runtime_1.jsxs)(react_admin_1.TabbedForm, Object.assign({ id: "promotion_form" }, { children: [(0, jsx_runtime_1.jsx)(react_admin_1.FormTab, Object.assign({ label: "\u0410\u043A\u0446\u0438\u044F" }, { children: (0, jsx_runtime_1.jsxs)(Box_1.default, { children: [(0, jsx_runtime_1.jsx)(react_admin_1.ReferenceInput, Object.assign({ label: "\u0420\u0435\u043D\u0442\u0430\u043B", reference: "rental", source: "rentalId", validate: validate_1.validateRequired }, { children: (0, jsx_runtime_1.jsx)(react_admin_1.AutocompleteInput, { optionText: "name", label: "\u0420\u0435\u043D\u0442\u0430\u043B" }) })), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "name", label: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435", validate: validate_1.validateRequired, onChange: (e) => setName(e.target.value) }), (0, jsx_runtime_1.jsx)(react_admin_1.NumberInput, { source: "weight", validate: validate_1.validateRequired, label: "\u0412\u0435\u0441", min: 0, max: 1000 }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "externalUrl", label: "\u0421\u0441\u044B\u043B\u043A\u0430 \u043D\u0430 \u0430\u043A\u0446\u0438\u044E \u043D\u0430 \u0441\u0430\u0439\u0442\u0435 \u0440\u0435\u043D\u0442\u0430\u043B\u0430", validate: validate_1.validateRequired }), (0, jsx_runtime_1.jsx)(BoundedTextField_1.BoundedTextField, { label: "\u0427\u041F\u0423", source: "url", validate: validate_1.validateRequired, disabled: true, refValue: (0, makeUrl_1.makeUrl)(name) }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "shortText", label: "\u0422\u0435\u043A\u0441\u0442 \u0432 \u043A\u0430\u0440\u0442\u043E\u0447\u043A\u0435", validate: validate_1.validateRequired }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "text", label: "\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u0430\u043A\u0446\u0438\u0438", validate: validate_1.validateRequired, multiline: true, rows: 8 }), (0, jsx_runtime_1.jsx)(react_admin_1.SelectInput, { label: "\u0422\u0438\u043F \u0430\u043A\u0446\u0438\u0438", source: "promotionType", defaultValue: "new", choices: [
                                { id: 'new', name: 'Новинка' },
                                { id: 'sale', name: 'Скидка' },
                            ] }), (0, jsx_runtime_1.jsx)(react_admin_1.DateInput, { label: "\u0414\u0430\u0442\u0430 \u043E\u043A\u043E\u043D\u0447\u0430\u043D\u0438\u044F \u0430\u043A\u0446\u0438\u0438", source: "date", type: "date" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { label: "\u0422\u0435\u043A\u0441\u0442 \u0434\u043B\u044F \u043B\u0435\u0439\u0431\u043B\u0430 (\u043D\u0430 \u043A\u0430\u0440\u0442\u043E\u0447\u043A\u0435)", source: "promotionText", validate: validate_1.validateRequired }), (0, jsx_runtime_1.jsx)(react_admin_1.ImageInput, Object.assign({ source: "photos", validate: validate_1.validateRequired, multiple: true }, { children: (0, jsx_runtime_1.jsx)(PreviewImage_1.PreviewImage, { source: "photos" }) })), (0, jsx_runtime_1.jsx)(react_admin_1.BooleanInput, { source: "showOnMainPage", label: "\u041F\u043E\u043A\u0430\u0437\u044B\u0432\u0430\u0442\u044C \u0432 \u0441\u043F\u0438\u0441\u043A\u0435 \u043D\u043E\u0432\u043E\u0441\u0442\u0435\u0439 \u043D\u0430 \u0433\u043B\u0430\u0432\u043D\u043E\u0439" })] }) })), (0, jsx_runtime_1.jsx)(react_admin_1.FormTab, Object.assign({ label: "\u0421\u0415\u041E" }, { children: (0, jsx_runtime_1.jsxs)(Box_1.default, { children: [(0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "seo_title", label: "Title" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "seo_description", label: "Meta description", multiline: true, rows: 4 }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "seo_keywords", label: "\u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u0441\u043B\u043E\u0432\u0430", multiline: true, rows: 4 })] }) })), (0, jsx_runtime_1.jsx)(react_admin_1.FormTab, { label: "Preview: Card" }), (0, jsx_runtime_1.jsx)(react_admin_1.FormTab, { label: "Preview: Page" })] })));
};
exports.default = PromotionsBase;
//# sourceMappingURL=PromotionsBase.js.map