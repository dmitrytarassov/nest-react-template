"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_admin_1 = require("react-admin");
const BoundedTextField_1 = require("../BoundedTextField");
const Box_1 = require("../Box");
const PreviewImage_1 = require("../previews/PreviewImage");
const makeUrl_1 = require("../utils/makeUrl");
const validate_1 = require("../utils/validate");
const RentalPreviewCard_1 = require("./RentalPreviewCard");
function RentalBase({ setCity, coordinates, setMapIsOpen, }) {
    const [name, setName] = (0, react_1.useState)('');
    return ((0, jsx_runtime_1.jsxs)(react_admin_1.TabbedForm, Object.assign({ id: "rental_form" }, { children: [(0, jsx_runtime_1.jsx)(react_admin_1.FormTab, Object.assign({ label: "\u041E\u0441\u043D\u043E\u0432\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F" }, { children: (0, jsx_runtime_1.jsxs)(Box_1.default, { children: [(0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "name", label: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u0440\u0435\u043D\u0442\u0430\u043B\u0430", validate: validate_1.validateRequired, resettable: true, onChange: (e) => setName(e.target.value) }), (0, jsx_runtime_1.jsx)(BoundedTextField_1.BoundedTextField, { label: "\u0427\u041F\u0423", source: "url", validate: validate_1.validateRequired, disabled: true, refValue: (0, makeUrl_1.makeUrl)(name) }), (0, jsx_runtime_1.jsx)(react_admin_1.NumberInput, { source: "weight", validate: validate_1.validateRequired, label: "\u0412\u0435\u0441", min: 0, max: 1000 }), (0, jsx_runtime_1.jsx)(react_admin_1.RadioButtonGroupInput, { label: "\u0410\u0434\u0440\u0435\u0441", source: "city", defaultValue: "spb", choices: [
                                { id: 'spb', name: 'Санкт-Петербург' },
                                { id: 'moscow', name: 'Москва' },
                            ], onChange: (e) => setCity(e.target.value) }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { multiline: true, source: "workingTime", validate: validate_1.validateRequired, label: "\u0412\u0440\u0435\u043C\u044F \u0440\u0430\u0431\u043E\u0442\u044B", rows: 3 }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "delivery", label: "\u0414\u043E\u0441\u0442\u0430\u0432\u043A\u0430" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "selfService", label: "Self-Service" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "repair", label: "\u0420\u0435\u043C\u043E\u043D\u0442" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "insurance", label: "\u0421\u0442\u0440\u0430\u0445\u043E\u0432\u043A\u0430" }), (0, jsx_runtime_1.jsx)(react_admin_1.NumberInput, { source: "rating", validate: validate_1.validateRequired, label: "\u0420\u0435\u0439\u0442\u0438\u043D\u0433", min: 1, max: 10 }), (0, jsx_runtime_1.jsx)(react_admin_1.ImageInput, Object.assign({ source: "icon", label: "\u0418\u043A\u043E\u043D\u043A\u0430", validate: validate_1.validateRequired }, { children: (0, jsx_runtime_1.jsx)(PreviewImage_1.PreviewImage, { source: "icon" }) }))] }) })), (0, jsx_runtime_1.jsx)(react_admin_1.FormTab, Object.assign({ label: "\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u044B" }, { children: (0, jsx_runtime_1.jsxs)(Box_1.default, { children: [(0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "email", validate: validate_1.validateEmail, label: "Email" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "phone", validate: validate_1.validatePhone, label: "\u0422\u0435\u043B\u0435\u0444\u043E\u043D \u0432 \u0444\u043E\u0440\u043C\u0430\u0442\u0435 79xxxxxxxxx" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "address", validate: validate_1.validateRequired, label: "\u0417\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A \u0430\u0434\u0440\u0435\u0441\u0430" }), (0, jsx_runtime_1.jsx)(BoundedTextField_1.BoundedTextField, { id: "coordinates_input", source: "coordinates", validate: validate_1.validateRequired, label: "\u041A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442\u044B", refValue: coordinates.join(','), onClick: () => setMapIsOpen(true) }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "vk", label: "vk" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "telegram", label: "Telegram" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { source: "web", label: "\u0421\u0430\u0439\u0442" })] }) })), (0, jsx_runtime_1.jsx)(react_admin_1.FormTab, Object.assign({ label: "\u0421\u0415\u041E" }, { children: (0, jsx_runtime_1.jsxs)(Box_1.default, { children: [(0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "seo_title", label: "Title" }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "seo_description", label: "Meta description", multiline: true, rows: 4 }), (0, jsx_runtime_1.jsx)(react_admin_1.TextInput, { resettable: true, source: "seo_keywords", label: "\u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u0441\u043B\u043E\u0432\u0430", multiline: true, rows: 4 })] }) })), (0, jsx_runtime_1.jsx)(react_admin_1.FormTab, Object.assign({ label: "Preview: Card" }, { children: (0, jsx_runtime_1.jsx)(RentalPreviewCard_1.default, {}) }))] })));
}
exports.default = RentalBase;
//# sourceMappingURL=RentalBase.js.map